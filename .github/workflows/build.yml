# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run cargo build
        # shell: cmd
        run: |
          sudo apt-get install gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
          # gcc --version
          # curl -L -o libclang-release_140-based-windows-mingw_64.7z https://github.com/FetheredSerpent/qt-mingw64/releases/download/dependencies/libclang-release_140-based-windows-mingw_64.7z
          # curl -L -o 7zr.exe https://github.com/FetheredSerpent/qt-mingw64/raw/dev/7zr.exe
          # echo Extracting libclang
          # 7zr x libclang-release_140-based-windows-mingw_64.7z -y
          # set PATH=%CD%\libclang\bin;%PATH%
          # where clang
          # clang --version
          export CC_aarch64_unknown_linux_musl=aarch64-linux-gnu-gcc-11
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=aarch64-linux-gnu-gcc-11
          rustup target add aarch64-unknown-linux-musl
          cargo build --target aarch64-unknown-linux-musl

      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: onetun
          path: target/debug/onetun
